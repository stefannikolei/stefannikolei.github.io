@page "/blog/blazor-static-sites"

<PageTitle>Blazor f√ºr statische Websites - Stefan Nikolei Tech Blog</PageTitle>

<div class="blog-post-container">
    <article class="card blog-post">
        <header class="post-header">
            <h1>‚ö° Blazor f√ºr statische Websites</h1>
            <div class="post-meta">
                <span>üìÖ 13. Juli 2025</span>
                <span>üìÇ Blazor, .NET</span>
                <span>‚è±Ô∏è 5 Min. Lesezeit</span>
            </div>
        </header>
        
        <div class="post-content">
            <p class="lead">
                Blazor WebAssembly ist nicht nur f√ºr komplexe Web-Anwendungen geeignet. 
                Es eignet sich auch hervorragend f√ºr statische Websites wie Blogs. 
                In diesem Artikel zeige ich, warum und wie.
            </p>
            
            <h2>ü§î Warum Blazor f√ºr einen Blog?</h2>
            <p>
                Auf den ersten Blick mag es √ºbertrieben erscheinen, ein komplettes SPA-Framework 
                f√ºr einen einfachen Blog zu verwenden. Aber Blazor WebAssembly bietet einige 
                interessante Vorteile:
            </p>
            
            <div class="advantage-grid">
                <div class="advantage-item">
                    <span class="advantage-icon">üî∑</span>
                    <div>
                        <h3>C# statt JavaScript</h3>
                        <p>Als .NET-Entwickler kann ich meine bevorzugte Programmiersprache verwenden:</p>
                        <ul>
                            <li>Einheitliche Code-Basis</li>
                            <li>Wiederverwendbare Komponenten</li>
                            <li>Typsicherheit im gesamten Stack</li>
                            <li>Bessere Entwickler-Produktivit√§t</li>
                        </ul>
                    </div>
                </div>
                
                <div class="advantage-item">
                    <span class="advantage-icon">üß©</span>
                    <div>
                        <h3>Komponentenbasierte Architektur</h3>
                        <p>Blazor erm√∂glicht es, die Website in wiederverwendbare Komponenten zu strukturieren:</p>
                        <div class="code-block">
                            <pre><code>@* BlogPost.razor *@
&lt;article class="blog-post"&gt;
    &lt;h2&gt;@Title&lt;/h2&gt;
    &lt;p class="post-meta"&gt;@PublishDate.ToString("dd. MMMM yyyy")&lt;/p&gt;
    &lt;div&gt;@ChildContent&lt;/div&gt;
&lt;/article&gt;

@code {
    [Parameter] public string Title { get; set; } = "";
    [Parameter] public DateTime PublishDate { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }
}</code></pre>
                        </div>
                    </div>
                </div>
                
                <div class="advantage-item">
                    <span class="advantage-icon">üìÑ</span>
                    <div>
                        <h3>Statische Generierung mit GitHub Pages</h3>
                        <p>Das Sch√∂ne an Blazor WebAssembly ist, dass es komplett statische Dateien generiert:</p>
                        <ul>
                            <li>HTML, CSS und JavaScript-Dateien</li>
                            <li>WASM-Binaries f√ºr die .NET-Runtime</li>
                            <li>Keine Server-Abh√§ngigkeiten</li>
                            <li>Perfekt f√ºr GitHub Pages</li>
                        </ul>
                    </div>
                </div>
            </div>
            
            <h2>üöÄ Setup und Deployment</h2>
            <p>Das Setup ist √ºberraschend einfach:</p>
            
            <div class="setup-steps">
                <div class="step-item">
                    <div class="step-number">1</div>
                    <div>
                        <h3>Projekt erstellen</h3>
                        <div class="code-block">
                            <pre><code>dotnet new blazorwasm -n MeinBlog</code></pre>
                        </div>
                    </div>
                </div>
                
                <div class="step-item">
                    <div class="step-number">2</div>
                    <div>
                        <h3>GitHub Actions f√ºr automatisches Deployment</h3>
                        <p>
                            Mit einer einfachen GitHub Actions Workflow-Datei l√§sst sich das Deployment 
                            komplett automatisieren. Bei jedem Push auf den main Branch wird automatisch 
                            gebaut und deployed.
                        </p>
                    </div>
                </div>
                
                <div class="step-item">
                    <div class="step-number">3</div>
                    <div>
                        <h3>Konfiguration f√ºr GitHub Pages</h3>
                        <p>
                            Wichtig ist die korrekte Konfiguration der <code>base href</code> und 
                            die Behandlung von Client-Side Routing.
                        </p>
                    </div>
                </div>
            </div>
            
            <h2>‚úÖ Vorteile gegen√ºber traditionellen Static Site Generators</h2>
            <p>Im Vergleich zu Jekyll, Hugo oder Gatsby bietet Blazor:</p>
            
            <div class="comparison-grid">
                <div class="comparison-item">
                    <span class="comparison-icon">üîí</span>
                    <strong>Typsicherheit</strong>
                    <p>Compile-Time Checks f√ºr alle Templates</p>
                </div>
                <div class="comparison-item">
                    <span class="comparison-icon">üí°</span>
                    <strong>IntelliSense</strong>
                    <p>Vollst√§ndige IDE-Unterst√ºtzung</p>
                </div>
                <div class="comparison-item">
                    <span class="comparison-icon">üêõ</span>
                    <strong>Debugging</strong>
                    <p>Echtes Debugging mit Breakpoints</p>
                </div>
                <div class="comparison-item">
                    <span class="comparison-icon">‚ôªÔ∏è</span>
                    <strong>Wiederverwendung</strong>
                    <p>Komponenten zwischen Projekten teilen</p>
                </div>
            </div>
            
            <h2>‚ö†Ô∏è Nachteile und √úberlegungen</h2>
            <div class="warning-box">
                <h3>Wichtige √úberlegungen:</h3>
                <ul>
                    <li><strong>Gr√∂√üe</strong> - WASM-Bundles sind gr√∂√üer als traditionelles HTML/JS</li>
                    <li><strong>Ladezeit</strong> - Initiales Laden dauert l√§nger</li>
                    <li><strong>SEO</strong> - Erfordert Pre-Rendering f√ºr optimale Suchmaschinen-Optimierung</li>
                    <li><strong>Browser-Support</strong> - WebAssembly ist relativ neu</li>
                </ul>
            </div>
            
            <h2>üéØ Fazit</h2>
            <p>
                Blazor WebAssembly f√ºr einen Blog zu verwenden mag auf den ersten Blick 
                wie "Overkill" erscheinen. Aber es demonstriert eindrucksvoll die 
                Vielseitigkeit moderner .NET-Technologien und bietet eine konsistente 
                Entwicklererfahrung.
            </p>
            
            <p>
                F√ºr .NET-Entwickler, die ihre F√§higkeiten auch im Frontend-Bereich 
                einsetzen m√∂chten, ist es eine spannende Alternative zu traditionellen 
                Ans√§tzen.
            </p>
        </div>
        
        <footer class="post-footer">
            <a href="/blog" class="btn btn-outline">‚Üê Zur√ºck zur Blog-√úbersicht</a>
        </footer>
    </article>
</div>

<style>
    .blog-post-container {
        max-width: 900px;
        margin: 0 auto;
    }
    
    .blog-post {
        margin-bottom: 2rem;
    }
    
    .post-header {
        text-align: center;
        margin-bottom: 2rem;
        padding-bottom: 2rem;
        border-bottom: 1px solid rgba(0, 0, 0, 0.1);
    }
    
    .post-header h1 {
        margin-bottom: 1rem;
        font-size: 2.5rem;
    }
    
    .post-meta {
        display: flex;
        justify-content: center;
        gap: 1.5rem;
        flex-wrap: wrap;
        font-size: 0.95rem;
        color: #718096;
        font-weight: 500;
    }
    
    .post-content {
        margin: 2rem 0;
    }
    
    .post-content .lead {
        font-size: 1.25rem;
        color: #4a5568;
        margin-bottom: 2rem;
        padding: 1.5rem;
        background: rgba(102, 126, 234, 0.05);
        border-radius: 0.75rem;
        border-left: 4px solid #667eea;
    }
    
    .advantage-grid {
        display: grid;
        gap: 2rem;
        margin: 2rem 0;
    }
    
    .advantage-item {
        display: flex;
        align-items: flex-start;
        gap: 1.5rem;
        padding: 2rem;
        background: rgba(118, 75, 162, 0.05);
        border-radius: 1rem;
        border: 1px solid rgba(118, 75, 162, 0.1);
    }
    
    .advantage-icon {
        font-size: 2rem;
        flex-shrink: 0;
    }
    
    .advantage-item h3 {
        margin-top: 0;
        margin-bottom: 0.75rem;
        color: #2d3748;
    }
    
    .setup-steps {
        display: grid;
        gap: 1.5rem;
        margin: 2rem 0;
    }
    
    .step-item {
        display: flex;
        align-items: flex-start;
        gap: 1.5rem;
        padding: 1.5rem;
        background: rgba(102, 126, 234, 0.05);
        border-radius: 0.75rem;
        border-left: 4px solid #667eea;
    }
    
    .step-number {
        background: #667eea;
        color: white;
        width: 2.5rem;
        height: 2.5rem;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        flex-shrink: 0;
    }
    
    .step-item h3 {
        margin-top: 0;
        margin-bottom: 0.75rem;
        color: #2d3748;
    }
    
    .comparison-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1rem;
        margin: 2rem 0;
    }
    
    .comparison-item {
        padding: 1.5rem;
        background: rgba(102, 126, 234, 0.05);
        border-radius: 0.75rem;
        text-align: center;
        border: 1px solid rgba(102, 126, 234, 0.1);
    }
    
    .comparison-icon {
        font-size: 1.5rem;
        display: block;
        margin-bottom: 0.75rem;
    }
    
    .comparison-item strong {
        display: block;
        color: #2d3748;
        margin-bottom: 0.5rem;
    }
    
    .comparison-item p {
        margin: 0;
        color: #4a5568;
        font-size: 0.9rem;
    }
    
    .warning-box {
        background: linear-gradient(135deg, rgba(245, 101, 101, 0.1) 0%, rgba(237, 137, 54, 0.1) 100%);
        padding: 2rem;
        border-radius: 1rem;
        margin: 2rem 0;
        border: 1px solid rgba(245, 101, 101, 0.2);
    }
    
    .warning-box h3 {
        margin-top: 0;
        margin-bottom: 1rem;
        color: #c53030;
    }
    
    .warning-box ul {
        margin: 0;
    }
    
    .code-block {
        background: rgba(0, 0, 0, 0.05);
        padding: 1.5rem;
        border-radius: 0.75rem;
        margin: 1rem 0;
        overflow-x: auto;
    }
    
    .code-block pre {
        margin: 0;
        background: none;
        padding: 0;
    }
    
    .post-footer {
        margin-top: 3rem;
        padding-top: 2rem;
        border-top: 1px solid rgba(0, 0, 0, 0.1);
        text-align: center;
    }
    
    @@media (max-width: 768px) {
        .post-header h1 {
            font-size: 2rem;
        }
        
        .post-meta {
            flex-direction: column;
            gap: 0.5rem;
        }
        
        .advantage-item {
            flex-direction: column;
            text-align: center;
        }
        
        .step-item {
            flex-direction: column;
            text-align: center;
        }
        
        .comparison-grid {
            grid-template-columns: 1fr;
        }
    }
</style>