@page "/"
@page "/home"

<PageTitle>Home - Stefan Nikolei Tech Blog</PageTitle>

@inject BlogPostService BlogPostService

<div class="hero-card">
    <h1>Willkommen zu meinem Tech Blog</h1>
    <p>Hier teile ich meine Gedanken und Erfahrungen zu verschiedenen Technologie-Themen.</p>
</div>

<div class="recent-posts-section">
    @if (blogPosts == null)
    {
        <div class="loading">Lade Blog Posts...</div>
    }
    else if (!blogPosts.Any())
    {
        <div class="no-posts">Keine Blog Posts gefunden.</div>
    }
    else
    {
        @foreach (var post in blogPosts)
        {
            <div class="post-preview">
                <h3><a href="/@post.Slug">@post.Title</a></h3>
                <div class="post-meta">📅 @post.PublishDate.ToString("dd. MMMM yyyy") • ⏱️ @post.ReadingTimeMinutes Min. Lesezeit</div>
                <div class="post-content">
                    <p>@post.Summary</p>
                </div>
                <a href="/@post.Slug" class="btn btn-outline">Weiterlesen</a>
            </div>
        }
        <div class="pagination">
            <button class="btn" @onclick="PreviousPage" disabled="@(currentPage == 1)">« Vorherige</button>
            <span>Seite @currentPage von @totalPages</span>
            <button class="btn" @onclick="NextPage" disabled="@(currentPage == totalPages)">Nächste »</button>
        </div>
    }
</div>

@code {
    private List<BlogPost>? blogPosts;
    private int currentPage = 1;
    private int pageSize = 5;
    private int totalPages = 1;

    protected override async Task OnInitializedAsync()
    {
        await LoadPosts();
    }

    private async Task LoadPosts()
    {
        var paginated = await BlogPostService.GetPaginatedPostsAsync(currentPage, pageSize);
        blogPosts = paginated.Posts;
        totalPages = paginated.TotalPages;
    }

    private async Task PreviousPage()
    {
        if (currentPage > 1)
        {
            currentPage--;
            await LoadPosts();
        }
    }

    private async Task NextPage()
    {
        if (currentPage < totalPages)
        {
            currentPage++;
            await LoadPosts();
        }
    }
}
